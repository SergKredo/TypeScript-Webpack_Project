(()=>{"use strict";class e{constructor(e,s,t,a){this.name=e,this.cost=s,this.className_=t,this.imgName=a}get className(){return this.className_}getInfo(){return""}}class s extends e{constructor(e,s,t,a,r){super(e,s,a,r),this.volume=t}getInfo(){return`${super.getInfo()}Напиток: ${this.name}, стоимость: ${this.cost} грн, объем: ${this.volume} л;`}get className(){return super.className}}class t extends e{constructor(e,s,t,a,r){super(e,s,a,r),this.weight=t}getInfo(){return`${super.getInfo()}Еда: ${this.name}, стоимость: ${this.cost} грн, вес: ${this.weight} кг;`}get className(){return super.className}}let a=[],r=window.document.getElementById("mainDiv"),n=new class extends s{constructor(e,s,t,a,r){super(e,s,t,a,r)}getInfo(){return super.getInfo()}get className(){return super.className}}("Morshinskay",15,1.5,"drink","water");a.push(n);let c=new class extends t{constructor(e,s,t,a,r){super(e,s,t,a,r)}getInfo(){return super.getInfo()}get className(){return super.className}}("Rude",90,.5,"food","ice-cream");a.push(c);let o=new class extends t{constructor(e,s,t,a,r){super(e,s,t,a,r)}getInfo(){return super.getInfo()}get className(){return super.className}}("Roshen",110,.5,"food","cake");a.push(o);let u=new class extends s{constructor(e,s,t,a,r){super(e,s,t,a,r)}getInfo(){return super.getInfo()}get className(){return super.className}}("Capuchino",35,.1,"drink","coffee");a.push(u);let l=new class extends s{constructor(e,s,t,a,r){super(e,s,t,a,r)}getInfo(){return super.getInfo()}get className(){return super.className}}("Chernigovskoe",75,.3,"drink","beer");a.push(l);let m=new class extends t{constructor(e,s,t,a,r){super(e,s,t,a,r)}getInfo(){return super.getInfo()}get className(){return super.className}}("Margarita",120,.4,"food","pizza");a.push(m),console.log(a),class{constructor(e,s){this.name=e,this.cost=s}get className(){return""}getInfo(){return""}static generateList(e,s){let t=e,a=document.getElementsByClassName("imag")[0],r=document.createElement("ul");s.forEach((e=>{let s=document.createElement("li");s.innerHTML=e.getInfo(),s.className=e.className,s.onmouseover=function(){switch(e.imgName){case"pizza":a.className="imag pizza";break;case"water":a.className="imag water";break;case"ice-cream":a.className="imag iceCream";break;case"cake":a.className="imag cake";break;case"coffee":a.className="imag coffee";break;case"beer":a.className="imag beer"}},console.dir(s),r.append(s)})),console.log(r),console.log(t),t.append(r)}}.generateList(r,a)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,